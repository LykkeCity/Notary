group 'jythonex'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

plugins {
    id "com.github.hierynomus.jython" version "0.3.0"
}

repositories {
    mavenCentral()
}

dependencies {
    //compile 'org.python:jython:2.7.1b2'
    compile 'org.python:jython-standalone:2.7.1b2'
    compile files("src/main/py")
    testCompile group: 'junit', name: 'junit', version: '4.11'
    jython ":requests"
}

task run(type: JavaExec) {
    description 'run bot with poloniex'
    main = "Runer"
    classpath = sourceSets.main.runtimeClasspath
}


/*group 'soa'
version '1.0-SNAPSHOT'

//apply plugin: "idea"
apply plugin: 'java'

sourceCompatibility = 1.8
//targetCompatibility = 1.8


plugins {
    "com.github.hierynomus.jython" version "0.3.0"
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.slf4j:jcl-over-slf4j:1.7.7'
    compile 'org.slf4j:slf4j-api:1.7.10'
    compile 'org.slf4j:slf4j-simple:1.7.10'
    compile 'org.apache.commons:commons-lang3:3.3.2'
    compile 'com.google.guava:guava:18.0'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'org.apache.httpcomponents:httpclient:4.3.6'
    compile 'com.eclipsesource.minimal-json:minimal-json:0.9.1'

    compile 'io.netty:netty-all:4.0.33.Final'

    compile 'org.python:jython-standalone:2.7.1b2'
    compile files("src/main/py")
    testCompile group: 'junit', name: 'junit', version: '4.11'
    jython ":requests"

    testCompile group: 'junit', name: 'junit', version: '4.11'


}

dependencies {
    //compile 'org.python:jython:2.7.1b2'

}

task run(type: JavaExec) {
    description 'run bot with poloniex'
    main = "Runer"
    classpath = sourceSets.main.runtimeClasspath
}


task runws(type: JavaExec) {
    description 'run ws'
    main = "WebSocketServer"
    classpath = sourceSets.main.runtimeClasspath
}

def distdir = new File(".")
def mainclass = "WebSocketServer.java"

task NotaryJar(type: Jar) {
    archiveName "notary.jar"
    destinationDir = distdir
    from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }
    manifest {
        attributes 'Main-Class': mainclass
    }
    with jar
}
*/